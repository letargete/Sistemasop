#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace base1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="allianc_promo")]
	public partial class base1 : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertinstitution(institution instance);
    partial void Updateinstitution(institution instance);
    partial void Deleteinstitution(institution instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertpharmacy(pharmacy instance);
    partial void Updatepharmacy(pharmacy instance);
    partial void Deletepharmacy(pharmacy instance);
    #endregion
		
		public base1() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["allianc_promoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public base1(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public base1(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public base1(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public base1(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<institution> institutions
		{
			get
			{
				return this.GetTable<institution>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<pharmacy> pharmacies
		{
			get
			{
				return this.GetTable<pharmacy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.institution")]
	public partial class institution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _institution_type;
		
		private string _institution_subtype;
		
		private string _company_id;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oninstitution_typeChanging(string value);
    partial void Oninstitution_typeChanged();
    partial void Oninstitution_subtypeChanging(string value);
    partial void Oninstitution_subtypeChanged();
    partial void Oncompany_idChanging(string value);
    partial void Oncompany_idChanged();
    #endregion
		
		public institution()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_institution_type", DbType="VarChar(4)")]
		public string institution_type
		{
			get
			{
				return this._institution_type;
			}
			set
			{
				if ((this._institution_type != value))
				{
					this.Oninstitution_typeChanging(value);
					this.SendPropertyChanging();
					this._institution_type = value;
					this.SendPropertyChanged("institution_type");
					this.Oninstitution_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_institution_subtype", DbType="VarChar(4)")]
		public string institution_subtype
		{
			get
			{
				return this._institution_subtype;
			}
			set
			{
				if ((this._institution_subtype != value))
				{
					this.Oninstitution_subtypeChanging(value);
					this.SendPropertyChanging();
					this._institution_subtype = value;
					this.SendPropertyChanged("institution_subtype");
					this.Oninstitution_subtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_id", DbType="VarChar(4)")]
		public string company_id
		{
			get
			{
				return this._company_id;
			}
			set
			{
				if ((this._company_id != value))
				{
					this.Oncompany_idChanging(value);
					this.SendPropertyChanging();
					this._company_id = value;
					this.SendPropertyChanged("company_id");
					this.Oncompany_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_institution", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.institution = null;
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.institution = this;
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_type;
		
		private string _specialty_1;
		
		private string _specialty_2;
		
		private string _name_1;
		
		private string _name_2;
		
		private string _name_3;
		
		private string _name_4;
		
		private string _email;
		
		private string _RFC;
		
		private string _license;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _status_change_date;
		
		private System.Nullable<System.DateTime> _creation_date;
		
		private System.Nullable<int> _creator_territory_id;
		
		private System.Nullable<int> _creator_employee_id;
		
		private string _external_id_1;
		
		private string _external_id_2;
		
		private string _external_id_3;
		
		private string _external_id_4;
		
		private EntityRef<institution> _institution;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<pharmacy> _pharmacy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_typeChanging(string value);
    partial void Oncustomer_typeChanged();
    partial void Onspecialty_1Changing(string value);
    partial void Onspecialty_1Changed();
    partial void Onspecialty_2Changing(string value);
    partial void Onspecialty_2Changed();
    partial void Onname_1Changing(string value);
    partial void Onname_1Changed();
    partial void Onname_2Changing(string value);
    partial void Onname_2Changed();
    partial void Onname_3Changing(string value);
    partial void Onname_3Changed();
    partial void Onname_4Changing(string value);
    partial void Onname_4Changed();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    partial void OnlicenseChanging(string value);
    partial void OnlicenseChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onstatus_change_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstatus_change_dateChanged();
    partial void Oncreation_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreation_dateChanged();
    partial void Oncreator_territory_idChanging(System.Nullable<int> value);
    partial void Oncreator_territory_idChanged();
    partial void Oncreator_employee_idChanging(System.Nullable<int> value);
    partial void Oncreator_employee_idChanged();
    partial void Onexternal_id_1Changing(string value);
    partial void Onexternal_id_1Changed();
    partial void Onexternal_id_2Changing(string value);
    partial void Onexternal_id_2Changed();
    partial void Onexternal_id_3Changing(string value);
    partial void Onexternal_id_3Changed();
    partial void Onexternal_id_4Changing(string value);
    partial void Onexternal_id_4Changed();
    #endregion
		
		public customer()
		{
			this._institution = default(EntityRef<institution>);
			this._doctor = default(EntityRef<doctor>);
			this._pharmacy = default(EntityRef<pharmacy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_type", DbType="VarChar(4)")]
		public string customer_type
		{
			get
			{
				return this._customer_type;
			}
			set
			{
				if ((this._customer_type != value))
				{
					this.Oncustomer_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_type = value;
					this.SendPropertyChanged("customer_type");
					this.Oncustomer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty_1", DbType="VarChar(4)")]
		public string specialty_1
		{
			get
			{
				return this._specialty_1;
			}
			set
			{
				if ((this._specialty_1 != value))
				{
					this.Onspecialty_1Changing(value);
					this.SendPropertyChanging();
					this._specialty_1 = value;
					this.SendPropertyChanged("specialty_1");
					this.Onspecialty_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialty_2", DbType="VarChar(4)")]
		public string specialty_2
		{
			get
			{
				return this._specialty_2;
			}
			set
			{
				if ((this._specialty_2 != value))
				{
					this.Onspecialty_2Changing(value);
					this.SendPropertyChanging();
					this._specialty_2 = value;
					this.SendPropertyChanged("specialty_2");
					this.Onspecialty_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_1", DbType="VarChar(100)")]
		public string name_1
		{
			get
			{
				return this._name_1;
			}
			set
			{
				if ((this._name_1 != value))
				{
					this.Onname_1Changing(value);
					this.SendPropertyChanging();
					this._name_1 = value;
					this.SendPropertyChanged("name_1");
					this.Onname_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_2", DbType="VarChar(100)")]
		public string name_2
		{
			get
			{
				return this._name_2;
			}
			set
			{
				if ((this._name_2 != value))
				{
					this.Onname_2Changing(value);
					this.SendPropertyChanging();
					this._name_2 = value;
					this.SendPropertyChanged("name_2");
					this.Onname_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_3", DbType="VarChar(100)")]
		public string name_3
		{
			get
			{
				return this._name_3;
			}
			set
			{
				if ((this._name_3 != value))
				{
					this.Onname_3Changing(value);
					this.SendPropertyChanging();
					this._name_3 = value;
					this.SendPropertyChanged("name_3");
					this.Onname_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_4", DbType="VarChar(100)")]
		public string name_4
		{
			get
			{
				return this._name_4;
			}
			set
			{
				if ((this._name_4 != value))
				{
					this.Onname_4Changing(value);
					this.SendPropertyChanging();
					this._name_4 = value;
					this.SendPropertyChanged("name_4");
					this.Onname_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="VarChar(100)")]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_license", DbType="VarChar(100)")]
		public string license
		{
			get
			{
				return this._license;
			}
			set
			{
				if ((this._license != value))
				{
					this.OnlicenseChanging(value);
					this.SendPropertyChanging();
					this._license = value;
					this.SendPropertyChanged("license");
					this.OnlicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(4)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_change_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> status_change_date
		{
			get
			{
				return this._status_change_date;
			}
			set
			{
				if ((this._status_change_date != value))
				{
					this.Onstatus_change_dateChanging(value);
					this.SendPropertyChanging();
					this._status_change_date = value;
					this.SendPropertyChanged("status_change_date");
					this.Onstatus_change_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> creation_date
		{
			get
			{
				return this._creation_date;
			}
			set
			{
				if ((this._creation_date != value))
				{
					this.Oncreation_dateChanging(value);
					this.SendPropertyChanging();
					this._creation_date = value;
					this.SendPropertyChanged("creation_date");
					this.Oncreation_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator_territory_id", DbType="Int")]
		public System.Nullable<int> creator_territory_id
		{
			get
			{
				return this._creator_territory_id;
			}
			set
			{
				if ((this._creator_territory_id != value))
				{
					this.Oncreator_territory_idChanging(value);
					this.SendPropertyChanging();
					this._creator_territory_id = value;
					this.SendPropertyChanged("creator_territory_id");
					this.Oncreator_territory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator_employee_id", DbType="Int")]
		public System.Nullable<int> creator_employee_id
		{
			get
			{
				return this._creator_employee_id;
			}
			set
			{
				if ((this._creator_employee_id != value))
				{
					this.Oncreator_employee_idChanging(value);
					this.SendPropertyChanging();
					this._creator_employee_id = value;
					this.SendPropertyChanged("creator_employee_id");
					this.Oncreator_employee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id_1", DbType="VarChar(100)")]
		public string external_id_1
		{
			get
			{
				return this._external_id_1;
			}
			set
			{
				if ((this._external_id_1 != value))
				{
					this.Onexternal_id_1Changing(value);
					this.SendPropertyChanging();
					this._external_id_1 = value;
					this.SendPropertyChanged("external_id_1");
					this.Onexternal_id_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id_2", DbType="VarChar(100)")]
		public string external_id_2
		{
			get
			{
				return this._external_id_2;
			}
			set
			{
				if ((this._external_id_2 != value))
				{
					this.Onexternal_id_2Changing(value);
					this.SendPropertyChanging();
					this._external_id_2 = value;
					this.SendPropertyChanged("external_id_2");
					this.Onexternal_id_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id_3", DbType="VarChar(100)")]
		public string external_id_3
		{
			get
			{
				return this._external_id_3;
			}
			set
			{
				if ((this._external_id_3 != value))
				{
					this.Onexternal_id_3Changing(value);
					this.SendPropertyChanging();
					this._external_id_3 = value;
					this.SendPropertyChanged("external_id_3");
					this.Onexternal_id_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id_4", DbType="VarChar(100)")]
		public string external_id_4
		{
			get
			{
				return this._external_id_4;
			}
			set
			{
				if ((this._external_id_4 != value))
				{
					this.Onexternal_id_4Changing(value);
					this.SendPropertyChanging();
					this._external_id_4 = value;
					this.SendPropertyChanged("external_id_4");
					this.Onexternal_id_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_institution", Storage="_institution", ThisKey="customer_id", OtherKey="customer_id", IsUnique=true, IsForeignKey=false)]
		public institution institution
		{
			get
			{
				return this._institution.Entity;
			}
			set
			{
				institution previousValue = this._institution.Entity;
				if (((previousValue != value) 
							|| (this._institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._institution.Entity = null;
						previousValue.customer = null;
					}
					this._institution.Entity = value;
					if ((value != null))
					{
						value.customer = this;
					}
					this.SendPropertyChanged("institution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_doctor", Storage="_doctor", ThisKey="customer_id", OtherKey="customer_id", IsUnique=true, IsForeignKey=false)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.customer = null;
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.customer = this;
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_pharmacy", Storage="_pharmacy", ThisKey="customer_id", OtherKey="customer_id", IsUnique=true, IsForeignKey=false)]
		public pharmacy pharmacy
		{
			get
			{
				return this._pharmacy.Entity;
			}
			set
			{
				pharmacy previousValue = this._pharmacy.Entity;
				if (((previousValue != value) 
							|| (this._pharmacy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pharmacy.Entity = null;
						previousValue.customer = null;
					}
					this._pharmacy.Entity = value;
					if ((value != null))
					{
						value.customer = this;
					}
					this.SendPropertyChanged("pharmacy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _title;
		
		private string _gender;
		
		private string _prefix_code;
		
		private string _social_style;
		
		private System.Nullable<int> _birth_year;
		
		private System.Nullable<int> _birth_month;
		
		private System.Nullable<int> _birth_day;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onprefix_codeChanging(string value);
    partial void Onprefix_codeChanged();
    partial void Onsocial_styleChanging(string value);
    partial void Onsocial_styleChanged();
    partial void Onbirth_yearChanging(System.Nullable<int> value);
    partial void Onbirth_yearChanged();
    partial void Onbirth_monthChanging(System.Nullable<int> value);
    partial void Onbirth_monthChanged();
    partial void Onbirth_dayChanging(System.Nullable<int> value);
    partial void Onbirth_dayChanged();
    #endregion
		
		public doctor()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(4)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(4)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prefix_code", DbType="VarChar(4)")]
		public string prefix_code
		{
			get
			{
				return this._prefix_code;
			}
			set
			{
				if ((this._prefix_code != value))
				{
					this.Onprefix_codeChanging(value);
					this.SendPropertyChanging();
					this._prefix_code = value;
					this.SendPropertyChanged("prefix_code");
					this.Onprefix_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_social_style", DbType="VarChar(4)")]
		public string social_style
		{
			get
			{
				return this._social_style;
			}
			set
			{
				if ((this._social_style != value))
				{
					this.Onsocial_styleChanging(value);
					this.SendPropertyChanging();
					this._social_style = value;
					this.SendPropertyChanged("social_style");
					this.Onsocial_styleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_year", DbType="Int")]
		public System.Nullable<int> birth_year
		{
			get
			{
				return this._birth_year;
			}
			set
			{
				if ((this._birth_year != value))
				{
					this.Onbirth_yearChanging(value);
					this.SendPropertyChanging();
					this._birth_year = value;
					this.SendPropertyChanged("birth_year");
					this.Onbirth_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_month", DbType="Int")]
		public System.Nullable<int> birth_month
		{
			get
			{
				return this._birth_month;
			}
			set
			{
				if ((this._birth_month != value))
				{
					this.Onbirth_monthChanging(value);
					this.SendPropertyChanging();
					this._birth_month = value;
					this.SendPropertyChanged("birth_month");
					this.Onbirth_monthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_day", DbType="Int")]
		public System.Nullable<int> birth_day
		{
			get
			{
				return this._birth_day;
			}
			set
			{
				if ((this._birth_day != value))
				{
					this.Onbirth_dayChanging(value);
					this.SendPropertyChanging();
					this._birth_day = value;
					this.SendPropertyChanged("birth_day");
					this.Onbirth_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_doctor", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.doctor = null;
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.doctor = this;
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pharmacy")]
	public partial class pharmacy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _pharmacy_type;
		
		private string _pharmacy_subtype;
		
		private string _company_id;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onpharmacy_typeChanging(string value);
    partial void Onpharmacy_typeChanged();
    partial void Onpharmacy_subtypeChanging(string value);
    partial void Onpharmacy_subtypeChanged();
    partial void Oncompany_idChanging(string value);
    partial void Oncompany_idChanged();
    #endregion
		
		public pharmacy()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_type", DbType="VarChar(4)")]
		public string pharmacy_type
		{
			get
			{
				return this._pharmacy_type;
			}
			set
			{
				if ((this._pharmacy_type != value))
				{
					this.Onpharmacy_typeChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_type = value;
					this.SendPropertyChanged("pharmacy_type");
					this.Onpharmacy_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_subtype", DbType="VarChar(4)")]
		public string pharmacy_subtype
		{
			get
			{
				return this._pharmacy_subtype;
			}
			set
			{
				if ((this._pharmacy_subtype != value))
				{
					this.Onpharmacy_subtypeChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_subtype = value;
					this.SendPropertyChanged("pharmacy_subtype");
					this.Onpharmacy_subtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company_id", DbType="VarChar(4)")]
		public string company_id
		{
			get
			{
				return this._company_id;
			}
			set
			{
				if ((this._company_id != value))
				{
					this.Oncompany_idChanging(value);
					this.SendPropertyChanging();
					this._company_id = value;
					this.SendPropertyChanged("company_id");
					this.Oncompany_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_pharmacy", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.pharmacy = null;
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.pharmacy = this;
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
